&location_nml
   horiz_dist_only                 = .false.
   vert_normalization_pressure     = 100000.0
   vert_normalization_height       = 10000.0
   vert_normalization_level        = 20.0
   vert_normalization_scale_height = 5.0
   approximate_distance            = .false.
   nlon                            = 71
   nlat                            = 36
   output_box_info                 = .true.
   print_box_level                 = 0
   special_vert_normalization_obs_types     = 'null'
   special_vert_normalization_pressures     = -888888.0
   special_vert_normalization_heights       = -888888.0
   special_vert_normalization_levels        = -888888.0
   special_vert_normalization_scale_heights = -888888.0
  /


# distribute_mean = false is faster if your model does vertical
#                   conversions but takes more memory
# distribute_mean = true is slower but takes much less memory and
#                   may allow you to run at all compared to not
#                   for very large state vectors

# enabling sampling error correction is generally beneficial
# the default file is in assimilation_code/programs/gen_sampling_err_table/work

# With a deterministic filter (filter_kind == 1 or 8)
# and a deterministic inflation (filter_nml:inf_deterministic == .true.)
# sort_obs_inc is not needed and is expensive. Should be .false.

# specify special localization items in the same order
# in both lists, the same number of items

&assim_tools_nml
   filter_kind                       = 1
   cutoff                            = 0.05
   distribute_mean                   = .true.
   sort_obs_inc                      = .false.
   spread_restoration                = .false.
   sampling_error_correction         = .false.
   adaptive_localization_threshold   = -1
   adaptive_cutoff_floor             = 0.0
   output_localization_diagnostics   = .false.
   localization_diagnostics_file     = 'localization_diagnostics'
   print_every_nth_obs               = 1000
   rectangular_quadrature            = .true.
   gaussian_likelihood_tails         = .false.
   close_obs_caching                 = .true.
   allow_missing_in_clm              = .false.
   adjust_obs_impact                 = .false.
   obs_impact_filename               = ""
   allow_any_impact_values           = .false.
   convert_all_obs_verticals_first   = .true.
   convert_all_state_verticals_first = .false.
   special_localization_obs_types    = 'null'
   special_localization_cutoffs      = -888888.0
  /

&cov_cutoff_nml
   select_localization = 1  /

&filter_nml
   single_file_in               = .false.,
   input_state_files            = 'null'
   input_state_file_list        = '<PRIORLIST>'
   init_time_days               = <DARTINITDAYS>,
   init_time_seconds            = 0,
   perturb_from_single_instance = .false.,
   perturbation_amplitude       = 0.2,

   stages_to_write              = 'preassim', 'output'

   single_file_out              = .false.,
   output_state_files           = 'null'
   output_state_file_list       = '<ANALIST>'
   output_interval              = 1,
   output_members               = .true.
   num_output_state_members     = 0,
   output_mean                  = .true.
   output_sd                    = .true.
   write_all_stages_at_end      = .false.

   ens_size                     = <NMEMBERS>,
   num_groups                   = 1,
   distributed_state            = .true.

   async                        = 0,
   adv_ens_command              = "./advance_model.csh",
   tasks_per_model_advance      = 1

   obs_sequence_in_name         = "<OBSINFILE>",
   obs_sequence_out_name        = "<OBSOUTFILE>",
   num_output_obs_members       = <NMEMBERS>,
   first_obs_days               = <FIRSTOBSDAY>,
   first_obs_seconds            = 0,
   last_obs_days                = <LASTOBSDAY>,
   last_obs_seconds             = 86399,
   obs_window_days              = <DTANA_OBS>,
   obs_window_seconds           = 0,

   inf_flavor                  = <INFLATION>,             0,
   inf_initial_from_restart    = .true.,                  .false.,
   inf_sd_initial_from_restart = .true.,                  .false.,
   inf_deterministic           = .true.,                  .true.,
   inf_initial                 = <INF_INI>,               1.0,
   inf_sd_initial              = <INF_SD_INI>,            0.0,
   inf_damping                 = 0.9,                     1.0,
   inf_lower_bound             = 1.0,                     1.0,
   inf_upper_bound             = 1.3,                     1000000.0,
   inf_sd_lower_bound          = 0.6,                     0.0

   trace_execution              = .false.,
   output_timestamps            = .true.,
   output_forward_op_errors     = .false.,
   silence                      = .false.,
   /

&quality_control_nml
   input_qc_threshold          = 3
   outlier_threshold           = 3
   enable_special_outlier_code = .false.
  /

&reg_factor_nml
   select_regression    = 1,
   input_reg_file       = "time_mean_reg",
   save_reg_diagnostics = .false.,
   reg_diagnostics_file = "reg_diagnostics"
  /

&smoother_nml
   num_lags              = 0,
   start_from_restart    = .false.,
   output_restart        = .false.,
   restart_in_file_name  = 'ics',
   restart_out_file_name = 'restart'
  /

&state_vector_io_nml
   buffer_state_io         = .false.
   single_precision_output = .false.
/

&obs_kind_nml
   assimilate_these_obs_types          = 'FLOAT_TEMPERATURE',
                                         'FLOAT_SALINITY',
                                         'SEA_SURFACE_HEIGHT',
                                         'SATELLITE_INFRARED_SST',
   evaluate_these_obs_types            = 'AltiKa_SEA_SURFACE_ANOMALY',
                                         'Cryosat2_SEA_SURFACE_ANOMALY',
                                         'Envisat_SEA_SURFACE_ANOMALY',
                                         'Envisatn_SEA_SURFACE_ANOMALY',
                                         'ERS1_SEA_SURFACE_ANOMALY',
                                         'ERS2_SEA_SURFACE_ANOMALY',
                                         'GFO_SEA_SURFACE_ANOMALY',
                                         'Haiyang2A_SEA_SURFACE_ANOMALY',
                                         'J1_SEA_SURFACE_ANOMALY',
                                         'J1g_SEA_SURFACE_ANOMALY',
                                         'J1n_SEA_SURFACE_ANOMALY',
                                         'J2_SEA_SURFACE_ANOMALY',
                                         'TP_SEA_SURFACE_ANOMALY',
                                         'TPn_SEA_SURFACE_ANOMALY',  
   use_precomputed_FOs_these_obs_types = 'null'
/

&obs_sequence_nml
   write_binary_obs_sequence = .false.
   read_binary_file_format   = 'native'
  /

&ensemble_manager_nml
   layout                      = 2
   tasks_per_node              = <TASKPERNODE>
   communication_configuration = 1
   debug                       = .false.
 /

&mpi_utilities_nml
   reverse_task_layout        = .false.
   all_tasks_print            = .false. 
   verbose                    = .false.
   async2_verbose             = .false.
   async4_verbose             = .false. 
   shell_name                 = ''
   separate_node_sync         = .false.
   create_local_comm          = .true.
   make_copy_before_sendrecv  = .false.
  /

&utilities_nml
   TERMLEVEL      = 1
   logfilename    = '<DARTLOGOUT>'
   nmlfilename    = '<DARTLOGNML>'
   module_details = .true.
   print_debug    = .false.
   write_nml      = 'file'
  /


# Each variable must have 5 entries.
# 1: variable name
# 2: DART KIND
# 3: minimum value - as a character string - if none, use 'NA'
# 4: maximum value - as a character string - if none, use 'NA'
# 5: does the variable get updated in the restart file or not ...
#    only variables from restart files may be updated.
#    'UPDATE' =>        update the variable in the restart file
#    'NO_COPY_BACK' => do not update the variable in the restart file
#    all these variables will be updated INTERNALLY IN DART
#    only variables marked 'UPDATE' will be modified for ROMS.

&model_nml
   roms_filename               = '<ROMSRSTNAME>'
   vert_transform              = 2
   roms_grid_file              = '<GRIDNAME>'
   assimilation_period_days    = <DTANA_OBS>
   assimilation_period_seconds = 0
   vert_localization_coord     = 3
   debug                       = 0
   variables                   = 'temp',   'QTY_TEMPERATURE',          'NA', 'NA', 'update',
                                 'salt',   'QTY_SALINITY',             '0.0','NA', 'update',
                                 'u',      'QTY_U_CURRENT_COMPONENT',  'NA', 'NA', 'update',
                                 'v',      'QTY_V_CURRENT_COMPONENT',  'NA', 'NA', 'update',
                                 'zeta',   'QTY_SEA_SURFACE_HEIGHT'    'NA', 'NA', 'update',
/

&quad_interpolate_nml
   debug = 0
  /
