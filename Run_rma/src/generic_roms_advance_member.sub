#!/bin/bash
<HEADER>

. <CURRENTDIR>/parameters
. <CURRENTDIR>/functions.sh

set -x

echo $(date)

this_member=<MEMBER>
disp_cycle=<DISPCYCLE>
NCORES=<NCORES>

# Name of the ROMS namelist
NAMELIST=${SCRATCHDIR}/Roms_files/ocean_${SIMU}_m${this_member}.in

echo $(date)

#------------------------------------------------------------------------------------
# Go to temporary directory (where filtering files are created)
#------------------------------------------------------------------------------------

cd ${SCRATCHDIR}/Tempfiles/m${this_member}/

#------------------------------------------------------------------------------------
# reload modules used when compiling
#------------------------------------------------------------------------------------

sed '/Currently/d' <CURRENTDIR>/modules-used > ${SCRATCHDIR}/Tempfiles/m${this_member}/modules.dat
list=$( cat ${SCRATCHDIR}/Tempfiles/m${this_member}/modules.dat | sed -e "s/[0-9])//g" )

module purge

for mod in $list ; do
    module load $mod
done

rm ${SCRATCHDIR}/Tempfiles/m${this_member}/modules.dat


#------------------------------------------------------------------------------------
# run the code
#------------------------------------------------------------------------------------

${RUN} <CURRENTDIR>/Exe/oceanM ${NAMELIST} > <CURRENTDIR>/Logs/ROMS/log.roms_fwd.c${disp_cycle}.m${this_member}

#------------------------------------------------------------------------------------
# check if the run finished OK
#------------------------------------------------------------------------------------

echo $(date)

check1=$( grep Blowing-up <CURRENTDIR>/Logs/ROMS/log.roms_fwd.c${disp_cycle}.m${this_member} )

if [ -z $check1 ] ; then
   echo "run for member $this_member did not blow up... continue..."
else
   echo "run for member $this_member blew up... stopping..."
   echo "analysis step will be held pending forever, please scancel it"
   exit 1
fi

check2=$( grep DONE <CURRENTDIR>/Logs/ROMS/log.roms_fwd.c${disp_cycle}.m${this_member} | tail -1 | awk '{ print $2 }' )

if [ ! -z $check2 ] ; then
   echo "run for member $this_member finished OK... continue..."
else
   echo "run for member $this_member did not finish... stopping..."
   echo "analysis step will be held pending forever, please scancel it"
   exit 1
fi

exit 0
